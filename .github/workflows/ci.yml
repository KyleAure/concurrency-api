# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: 
        - 'main'
        - 'RELEASE-*'
  pull_request:
    branches:
        - 'main'
        - 'RELEASE-*'

permissions:
  contents: read

jobs:
  build:

    # TODO update once 25-ea is available
    strategy:
      matrix:
        java-version: [ '21' ]

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@b36c23c0d998641eff861008f374ee103c25ac73 # v4.4.0
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
        cache: maven
    - name: Build project
      run: mvn -B package --file pom.xml
  verify:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
    - name: Set up JDK 21
      uses: actions/setup-java@b36c23c0d998641eff861008f374ee103c25ac73 # v4.4.0
      with:
        java-version: 21
        distribution: 'temurin'
        cache: maven
    - name: Analyze starters
      # Note: the starter is always 1 version ahead of what is in maven central
      # therefore, when we analyze the starters we need to force a prior version
      run: mvn dependency:analyze -Djakarta.concurrent.version=3.1.1 --file tck-dist/src/main/starter/pom.xml
